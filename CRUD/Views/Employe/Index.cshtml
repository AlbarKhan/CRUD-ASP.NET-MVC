@model IEnumerable<CRUD.Models.EmployeModel>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var isDeleted = false;
    if (!String.IsNullOrEmpty(Request.QueryString["isDeleted"]))
    {
        Boolean.TryParse(Request.QueryString["isDeleted"], out isDeleted);
    }
}


<p>
    @Html.ActionLink("Create New", "Create", null,new { @class = "btn btn-primary" })
    @if (isDeleted)
    {

        @Html.ActionLink("Active Users", "Index", new { isDeleted = false }, new { @class = "btn btn-primary" })
    }
    else
    {
        @Html.ActionLink("Deleted Users", "Index", new { isDeleted = true }, new { @class = "btn btn-primary" })
    }
    @Html.ActionLink("Print",null,null, new { @class = "btn btn-primary", @onclick= "return  printTable()" })

</p>
<table class="table border  table-striped" id="table">
    <tr>
        <th>
            Sr No
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FullName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Department)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Age)
        </th>

        <th>Action</th>
    </tr>

    @{
        var modelList = Model.ToList();
    }

    @for (int i = 0; i < modelList.Count; i++)
    {
        int srno = i + 1;
        <tr>
            <td>
                <!-- You can put any additional data here if needed -->
                @Html.DisplayFor(modelItem => srno)
            </td>
            <td>
                @Html.DisplayFor(modelItem => modelList[i].FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => modelList[i].Department)
            </td>
            <td>
                @modelList[i].Email
            </td>
            <td>
                @Html.DisplayFor(modelItem => modelList[i].Age)
            </td>
            @if (isDeleted)
            {
                
                <td>
                    @Html.ActionLink(" ", "Index", new { mode = "restore", id = modelList[i].Id }, new { @class = "btn btn-primary fa-solid fa-trash-arrow-up", @onclick = "return confirm('Are you sure you want to Restore this user')",@Title="Restore" })
                </td>

            }
            else
            {
                <td>
                    @Html.ActionLink(" ", "Edit", new { id = modelList[i].Id }, new { @class = "btn btn-warning fa-solid fa-user-pen" ,@title="Edit" }) |
                    @Html.ActionLink(" ", "Index", new { mode = "softdelete", id = modelList[i].Id }, new { @class = "btn btn-danger fa-solid fa-trash", @onclick = "return confirm('Are you sure you want to delete this user')",@title="Delete" })
                </td>
            }

        </tr>
    }


</table>


<script>
    function printTable() {
        function removeColumn(table, columnIndex) {
            for (var i = 0; i < table.rows.length; i++) {
                table.rows[i].deleteCell(columnIndex);
            }
        }

        var originalTable = document.getElementById("table");
        var clonedTable = originalTable.cloneNode(true);

        // Remove the last column (Action column)
        var columnIndexToRemove = clonedTable.rows[0].cells.length - 1;
        removeColumn(clonedTable, columnIndexToRemove);

        var printWindow = window.open("", "", "width=800,height=1200");

        printWindow.document.write("<html><head>");
        printWindow.document.write("<title>Print List</title>");
        printWindow.document.write("<link href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css' rel='stylesheet'></head>");
        printWindow.document.write("<body></body></html>");

        printWindow.onload = function () {
            printWindow.document.body.innerHTML = clonedTable.outerHTML;
            printWindow.print();
            printWindow.close();
        };

        printWindow.onload();
    }
</script>